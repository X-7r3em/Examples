Run a simple Hello World
1. To compile a simple java program:
javac -d MyFolder Path/MainPackage/MainClass.java

MyFolder is where the newly compiled classes will be
Path is the path to the folder

2. To run the program:
java -cp "MyFolder" MainPackage.MainClass

The classpath or cp can be ommited if we are in the root folder of the program

To create our oun jar JDK8
1. Compile classes that will be included in the jar
2. Create jars
jar cf src/jars/cw.jar -C out/cw .

src/jars is the folder in which the new cw.jar will be
-C out/cw says that we will take what is in out/cw folder
. indicates that we will place what we selected in the root of the jar

Note: If we want to create a jar with a manifest:
jar cfm Hello.jar Manifest.txt Hello.class Other.class

Hello.jar gives the names of the jar
Manifest.txt is out manifest. It should contain Main-Class: EntryPointClass
Hello.class and Other.class are the ones included in the jar

To run a program with our classes, our jars and external jars JDK8
1. The program must be compiled and it must know where all the needed classes are
javac -d out -cp "src;src/jars/cw.jar;src/jars/dto.jar;src/jars/modelmapper-2.3.2.jar" src/app/Main.java
javac -d out -cp "src;src/jars/*" src/app/Main.java 

-d out tells it to put the compiled classes in the out folder
- src/app/Main.java shows where to start the program from
-cp "src;src/jars/cw.jar;src/jars/dto.jar;src/jars/modelmapper-2.3.2.jar" lists all the needed classes separated with ;
-- src is for the root, and the others are all the jars

2. We run the program
java -cp "out;src/jars/cw.jar;src/jars/dto.jar;src/jars/modelmapper-2.3.2.jar" app.Main
java -cp "out;src/jars/*" app.Main

-cp location of the compiled classes and jars
- app.Main - starting point of the program